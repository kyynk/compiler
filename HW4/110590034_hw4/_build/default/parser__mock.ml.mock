
type token = 
  | EOF

# 4 "parser.mly"
  
  open Ast


# 11 "parser__mock.ml.mock"

let menhir_begin_marker =
  0

and xv_prog =
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 28 "parser.mly"
     _1
# 21 "parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) : (
# 22 "parser.mly"
      (Ast.program)
# 25 "parser__mock.ml.mock"
  ) ->
    (
# 30 "parser.mly"
    ( { defs = []; main = Sblock [] } (* To be modified *) )
# 30 "parser__mock.ml.mock"
     : 'tv_prog) in
  ((let rec diverge() = diverge() in diverge()) : 'tv_prog)

and menhir_end_marker =
  0
